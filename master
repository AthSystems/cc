local modem = peripheral.find("modem") or error("No modem", 0)
rednet.open(peripheral.getName(modem))

local farm_running = false


local nodeDrills = 0
local drill_state = false
local kw_drills_frontward = "frontward"
local kw_drills_fb_frontward = "DFF"
local kw_drills_backward = "backward"
local kw_drills_fb_backward = "DFB"

local nodePusher = 5
local pusher_lvl = 0
local kw_pusher_5m = "5m"
local kw_pusher_fb_5m = "LVL5"
local kw_pusher_1m = "1m"
local kw_pusher_fb_1m = "LVL"
local kw_pusher_ground = "0m"
local kw_pusher_fb_ground = "LVL0"
local kw_pusher_fb_top = "LVL15"

local nodeDeploy = 18
local kw_deploy = "deploy"
local kw_deploy_fb ="deployed"

function send(id, message)
    print("Sending to " .. id .. ": " .. message)
    rednet.send(id, message)
end

function waitForReply(keyword, timeout)
    local start = timeout and os.clock() or nil

    while true do
        local timeLeft = timeout and math.max(0.1, timeout - (os.clock() - start)) or nil
        if timeLeft and timeLeft <= 0 then
            print("Timeout waiting for: " .. keyword)
            return nil, nil
        end

        local _, msg = rednet.receive(timeLeft)
        if msg and msg:find(keyword) then
            print("âœ” " .. msg)

            -- Only extract the number after "LVL"
            local lvlStr = string.match(msg, "LVL(%d+)")
            local level = tonumber(lvlStr)

            return msg, level
        end
    end
end

function sendAndWait(id, message, waitFor, timeout)
    send(id, message)
    reply, level = waitForReply(waitFor, timeout)
    return reply, level
end

function stop()
    print("Stopping farm")
end

function toggleDrills()
    if drill_state then
        sendAndWait(nodeDrills, kw_drills_backward,kw_drills_fb_backward)
    else 
        sendAndWait(nodeDrills, kw_drills_frontward,kw_drills_fb_frontward)
    end
    drill_state = not drill_state
end


function move_block_pusher(lvl, timeout)

    if lvl == 1 then
        if pusher_lvl >= 5 and pusher_lvl <= 15 then
            send(nodePusher, kw_pusher_1m)
            if pusher_lvl == 14 then
                msg, lvl = waitForReply(kw_pusher_fb_top)
                print("Level Debug : " .. tostring(lvl)
                pusher_lvl = lvl
            else
                pusher_lvl = waitForReply(kw_pusher_fb_1m)
                print("Level Debug : " .. tostring(lvl)
                pusher_lvl = lvl
            end
        end

    elseif lvl == 5 then
        if pusher_lvl == 0 then
            msg, lvl  = sendAndWait(nodePusher, kw_pusher_5m, kw_pusher_fb_5m)
            print("Level Debug : " .. tostring(lvl)
            pusher_lvl = lvl
        end

    elseif lvl == 0 then
        if pusher_lvl == 15 then
            msg, lvl  = sendAndWait(nodePusher, kw_pusher_ground, kw_pusher_fb_ground)
            print("Level Debug : " .. tostring(lvl)
            pusher_lvl = lvl
        end
    end

    print("Pusher level to: " .. pusher_lvl)
end

function deploy()
    sendAndWait(nodeDeploy, kw_deploy, kw_deploy_fb)
end


function farm_cycle()

    if not farm_running then 

        deploy()
        sleep(6)

        -- Start moving up
        move_block_pusher(5)

        --while pusher_lvl < 7 do
        --  move_block_pusher(1)
        --    toggleDrills()
        --end

        -- Start drilling
        toggleDrills()
        while pusher_lvl < 15 do 
            move_block_pusher(1)
            toggleDrills()
        end

        -- Reset
        move_block_pusher(0)
        toggleDrills()

    end
end

sleep(5)
farm_cycle()

