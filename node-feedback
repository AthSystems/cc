-- Node Feedback Template
local modem = peripheral.find("modem") or error("No modem found", 0)
rednet.open(peripheral.getName(modem))


-- To Modify
local node_name = "undefined"
local feedback_command = "undefined"
local redstone_side = "undefined"



local feedback_sent = false
local last_redstone_state = false

print("Node ".. node_name .. " : ready.")


while true do
  local state = redstone.getInput(redstone_side)
  if(state ~= last_redstone_state) then
    last_redstone_state = state
    if last_redstone_state then
      rednet.send(1, "[ " .. node_name .. "] : " .. feedback_command)
      feedback_sent = true
    else
      feeback_sent = false
    end
  end
  sleep(0.5)
end

-- === Setup ===
local modem = peripheral.find("modem") or error("No modem found")
rednet.open(peripheral.getName(modem))

-- === Configuration (SET THESE PER NODE) ===
local node_name = "n"       
local feedback_command = "n"
local redstone_side = "right"
local master_id = 1

-- === Protocols ===
local ptc_reply = "sky-reply"

-- === State Tracking ===
local feedback_sent = false
local last_redstone_state = false

-- === Utilities ===
local function prompt(msg)
    print("[" .. os.date("%H:%M:%S") .. "] " .. msg)
end

prompt(node_name .. "ready. Listening on " .. redstone_side .. ".")

-- === Loop: Watch redstone input ===
while true do
    local state = redstone.getInput(redstone_side)

    if state ~= last_redstone_state then
        last_redstone_state = state

        if state then
            rednet.send(master_id, "[ " .. node_name .. " ] : " .. feedback_command, ptc_reply)
            log("Feedback sent: " .. feedback_command)
            feedback_sent = true
        else
            feedback_sent = false
        end
    end

    sleep(0.5)
end
